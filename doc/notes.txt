PROGETTO
    creato con npm, node.js e build tool Vue-CLI (attraverso riga di comando)
        utile, ha creato molti file
    uso vue3, Vue CLI 5.0.8

    (CLI Plugins are npm packages that provide optional features to your Vue CLI projects, such as Babel/TypeScript transpilation, ESLint integration, unit testing, and end-to-end testing. It's easy to spot a Vue CLI plugin as their names start with either @vue/cli-plugin- (for built-in plugins) or vue-cli-plugin- (for community plugins).)
    (When you run the vue-cli-service binary inside your project, it automatically resolves and loads all CLI Plugins listed in your project's package.json.)

    You can install and manage Plugins using the GUI with the VUE UI COMMAND
    uso PLUGIN CLI ROUTER
    come estensione vscode uso Volar invece che Vetur
    fare partire il server frontend -> npm run serve



    uso vue per rendere il sito più dinamico. ovvero non faccio hard-coding direttamente nell'html
    zero hard-coding su file index.html
    uso i props per evitare hard-coding nei componenti
        - per data-binding di classi per assegnare in modo dinamico stili specifici a classi in base al prop
        - per mostrare classi quando serve
    uso emit per comunicazione figlio-genitore. al contrario passo con props

    nel fare i login e submit, voglio passare da pagina a pagina -> uso ed installo vue-router 
        noto che non uso delle server request se ispeziono pagina -> guardo su "Network"
    [metto cose specifiche della pagina in 'views', parti che riuso sempre in 'components']

    installo json-server per gestire i file json del database-DATABASE FINTO

    uso formattazione composition API di vue 3

    uso cartella composables per rendere codice delle view .vue più leggibile, li divido dalla funzione di fetch

    marker della mappa non funziona sempre, quindi uso funzioni async 

    CREATO IL DB CON MYSQL WORKBENCH, HA UN ALTRO ip
    incomincio la confugurazione dell cross tra i due ip front-end e backend
    uso due porte:
        apache -> per richieste a SERVER HTTP:
        MySql -> per richieste dirette al database


    faccio il database considerando le SESSION per gestire utente/admin

    faccio backend con php
    file php gestiscono solo logic e data, nessun elemento di presentazione. RITORNANO SOLO JSON

    incomincio a popolare il database

    incomincio a fare il register e login collegato al database. lo script javascript lo metto dentro agli stessi file vue essendo scoped ad essi.

    per le richieste php uso async axios per dinamicità

    nel backend non uso POST ma ad esempio "$input = json_decode(file_get_contents("php://input"), true)".
    è più adatto al mio progetto e file json

    nel frontend dato che uso vue, uso axios.post

    uso sessioni php per gestire utenti loggati

    preparo codice per fare la build [11/11, 12/11, ...]
    Ottimizzazione dei File: I file sono stati ottimizzati per la produzione (minificazione, suddivisione del codice, ecc.).

    aggiungo funzione senza usare api esterne per calcolare la LUMINOSITA' usando la fotocamera del pc

    aggiungo funzione che calcola average total brightness

    aggiunta saved paths

    fix bug particolare di doppio click veloce su registra, non stoppa veramente ma continua a registrare anche se è stato stoppato. RISOLTO

    aggiunta popup usando overlay e funzione di vue emit

    PER LA BUILD HO CAMBIATO IL FILE .HTACCESS
    
-------------------------------------------------------------------------------------------------------------------

(teleport component for modals)
(suspence component for asynchronous components)?
router-link normali per pagine diverse
params dinamici, per aprire diverse pagine in base a cosa clicchi. route-param cambia ma è lo stesso file vue. CONCETTI DIVERSI MA STESSA PAGINA.
    ($route.params.id)
props per passare dati a componenti della pagina
Props: Ideale per la comunicazione diretta tra componenti in una relazione genitore-figlio. Permette la reattività e una struttura chiara di passaggio dati.
Route Params: Migliore per passare dati legati alla navigazione o allo stato del route, come ID o altri parametri, specialmente quando si passa da una pagina all'altra.




folder "public" for files i don't want to go through webpack. HARD-CODING
main.js renders app and sends it to DOM and sends it to be seen INSIDE the index.html(in public)
Vue.js root in cui tutti il resto è innestato. chiama i .vue principali. PARENT FILE
uso "npx json-server --watch data/db.json" non serve perchè ho database vero

uso "npm run serve"

backend php, prima di ogni richiesta http
    // Impostazione degli header CORS per consentire richieste da localhost:8080
    header("Access-Control-Allow-Origin: http://localhost:8080");
    header("Access-Control-Allow-Methods: GET, POST, OPTIONS, PUT, DELETE");
    header("Access-Control-Allow-Headers: Content-Type, Authorization");
    header("Content-Type: application/json");
-------------------------------------------------------------------------------------------------------------------
DOMANDE:
