{"version":3,"file":"js/587.01761d72.js","mappings":"mPACOA,MAAM,qB,GADbC,IAAA,G,GAAAA,IAAA,G,GAOWD,MAAM,a,GAGFA,MAAM,YAAYE,MAAA,uB,GAIlBF,MAAM,uB,GACJA,MAAM,a,EAfvB,Q,GAAAC,IAAA,G,UA2BME,EAAAA,EAAAA,IAA8B,SAA3B,2BAAuB,K,GAA1BC,G,0CA1BJC,EAAAA,EAAAA,IA4BM,MA5BNC,EA4BM,CA3BOC,EAAAC,QAAK,WAAhBH,EAAAA,EAAAA,IAEM,MAJVI,EAAA,EAGMN,EAAAA,EAAAA,IAAyB,SAAtB,WAAOO,EAAAA,EAAAA,IAAGH,EAAAC,OAAK,OAGM,IAAVD,EAAAC,QAAK,WAArBH,EAAAA,EAAAA,IAmBM,MAzBVM,EAAA,EAOMR,EAAAA,EAAAA,IAiBM,MAjBNS,EAiBM,gBAhBJP,EAAAA,EAAAA,IAeMQ,EAAAA,GAAA,MAvBdC,EAAAA,EAAAA,IAQqCP,EAAAQ,WARrC,CAQqBC,EAAMC,M,WAAnBZ,EAAAA,EAAAA,IAeM,OAfmCJ,IAAKe,EAAKE,QAASlB,MAAM,a,EAEhEG,EAAAA,EAAAA,IAEM,MAFNgB,EAEM,EADJhB,EAAAA,EAAAA,IAA2B,SAAxB,SAAKO,EAAAA,EAAAA,IAAGO,EAAQ,GAAH,MAGlBd,EAAAA,EAAAA,IAOM,MAPNiB,EAOM,EANJjB,EAAAA,EAAAA,IAEM,MAFNkB,EAEM,EADJlB,EAAAA,EAAAA,IAAyE,OAAnEmB,IAAKf,EAAAgB,gBAAiBC,IAAI,oBAAoBxB,MAAM,gB,OAhBxEyB,MAkBYtB,EAAAA,EAAAA,IAEI,KAFAD,OAlBhBwB,EAAAA,EAAAA,IAAA,CAAAC,MAkBgCpB,EAAAqB,SAASrB,EAAAsB,oBAAoBb,EAAKc,iB,QACjDvB,EAAAsB,oBAAoBb,EAAKc,aAAc,MAC5C,U,wBAMRzB,EAAAA,EAAAA,IAEM,MA5BV0B,EAAAC,K,qFAuCE,GACEC,KAAM,iBAENC,KAAAA,GACE,MAAM1B,GAAQ2B,EAAAA,EAAAA,IAAI,MACZC,GAASC,EAAAA,EAAAA,MACTtB,GAAYoB,EAAAA,EAAAA,IAAI,IAIhBG,EAAaC,UACjBC,EAAAA,EAAMC,IAAK,qFAAqF,CAC5FC,iBAAiB,IACpBC,MAAKC,IACJC,QAAQC,IAAI,iBAAkBF,EAASG,MAEnCH,EAASG,KAAKC,SAEdxC,EAAMyC,OAAQ,EACdlC,EAAUkC,MAAQL,EAASG,KAAKG,QAEhC1C,EAAMyC,OAAQ,EACdJ,QAAQC,IAAI,6BAA8BF,EAASG,KAAKI,SACxDf,EAAOgB,KAAK,YAChB,IAEDC,OAAM,KAEH7C,EAAMyC,OAAQ,EACdJ,QAAQC,IAAI,gBACZV,EAAOgB,KAAK,WAAW,GACzB,EAGEvB,EAAuBC,IAC3B,IAAIwB,EAAoB,IACxB,OAAOC,KAAKC,MAAO,IAAM1B,EAAcwB,EAAkB,EAIrD1B,EAAY6B,GACZA,GAAc,GAAKA,EAAa,GAC3B,MACEA,GAAc,IAAMA,EAAa,GACnC,SACEA,GAAc,IAAMA,GAAc,IACpC,QAEA,QAQX,OAJAC,EAAAA,EAAAA,KAAU,KACRpB,GAAY,IAGP,CACL9B,QACA8B,aACAvB,YACAQ,gBAAe,EACfM,sBACAD,WAEJ,G,UC/FJ,MAAM+B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://bylights/./src/views/SavedPathsView.vue","webpack://bylights/./src/views/SavedPathsView.vue?5490"],"sourcesContent":["<template>\n  <div class=\"saved-paths-popup\">\n    <div v-if=\"error\">\n      <p>Error: {{ error }}</p>\n    </div>\n\n    <div v-else-if=\"error === false\">\n      <div class=\"path-list\">\n        <div v-for=\"(path, index) in ListPaths\" :key=\"path.path_id\" class=\"path-item\">\n\n          <div class=\"name-path\" style=\"text-align: left;\">\n            <p>Path {{ index + 1 }}</p>\n          </div>\n\n          <div class=\"icon-and-percentage\">\n            <div class=\"lamp-icon\">\n              <img :src=\"streetLightIcon\" alt=\"street light icon\" class=\"street-light\">\n            </div>\n            <p :style=\"{ color: getColor(calculateBrightness(path.brightness)) }\">\n              {{ calculateBrightness(path.brightness) }} %\n            </p>\n          </div>\n\n        </div>\n      </div>\n    </div>\n    <div v-else>\n      <p>Caricamento dei dati...</p>\n    </div>\n  </div>\n</template>\n\n\n<script>\n    import {onMounted, ref} from 'vue'\n    import axios from 'axios'\n    import { useRouter } from 'vue-router'\n    import streetLightIcon from '@/assets/street-light-icon.svg'\n\n  export default {\n    name: 'SavedPathsView',\n\n    setup() {\n      const error = ref(null);\n      const router = useRouter();\n      const ListPaths = ref([]);\n\n\n      //prende dal database i path registrati da tale utente loggato in sessione.\n      const getPathsId = async() => {\n        axios.get(`http://localhost/tirocinio/crowdsensing-web-app/bylights/src/db/api/SavedPaths.php`, {\n            withCredentials: true})\n        .then(response => {\n          console.log(\"Response data:\", response.data);\n\n          if (response.data.success) {\n              // Salva la lista dei path\n              error.value = false;\n              ListPaths.value = response.data.paths;\n            } else {\n              error.value = true;\n              console.log(\"Error message from server:\", response.data.message);\n              router.push('/mapView');\n          }\n        })\n        .catch(() => {\n            // Errore, reindirizza al login\n            error.value = true;\n            console.log(\"errore catch\");\n            router.push('/mapView');\n        });\n      }\n\n      const calculateBrightness = (brightness) => {\n        let maximumBrightness = 270;\n        return Math.floor((100 * brightness) / maximumBrightness);\n      }\n\n      // determina il colore in base alla percentuale\n      const getColor = (percentage) => {\n        if (percentage >= 0 && percentage < 30) {\n          return 'red';\n        } else if (percentage >= 30 && percentage < 60) {\n          return 'orange';\n        } else if (percentage >= 60 && percentage <= 100) {\n          return 'green';\n        } else {\n          return 'black'; // Colore di default\n        }\n      };\n\n      onMounted(() => {\n        getPathsId();\n      })\n\n      return {\n        error,\n        getPathsId,\n        ListPaths,\n        streetLightIcon,\n        calculateBrightness,\n        getColor\n      };\n    }\n  };\n</script>\n\n<style>\n  .path-list {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n</style>\n\n<style scoped>\n  .path-item {\n    width: 80%;\n    padding: 15px;\n    margin: 10px 0;\n    border-radius: 8px;\n    background-color: #E9F7FF;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .name-path{\n    flex-grow: 1;\n  }\n\n  .path-item p {\n    margin: 0;\n    font-size: 20px;\n    font-weight: bold;\n    color: #555;\n  }\n\n  .street-light{\n        height: 30px;\n        width: 30px;\n    }\n\n    /*icona e percentuale */\n    .icon-and-percentage {\n      display: flex;\n      align-items: center;\n      margin-top: 10px;\n    }\n\n    .lamp-icon {\n      margin-right: 4px;\n      margin-bottom: 4px;\n    }\n</style>\n","import { render } from \"./SavedPathsView.vue?vue&type=template&id=5815b1b8&scoped=true\"\nimport script from \"./SavedPathsView.vue?vue&type=script&lang=js\"\nexport * from \"./SavedPathsView.vue?vue&type=script&lang=js\"\n\nimport \"./SavedPathsView.vue?vue&type=style&index=0&id=5815b1b8&lang=css\"\nimport \"./SavedPathsView.vue?vue&type=style&index=1&id=5815b1b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5815b1b8\"]])\n\nexport default __exports__"],"names":["class","key","style","_createElementVNode","_hoisted_10","_createElementBlock","_hoisted_1","$setup","error","_hoisted_2","_toDisplayString","_hoisted_3","_hoisted_4","_Fragment","_renderList","ListPaths","path","index","path_id","_hoisted_5","_hoisted_6","_hoisted_7","src","streetLightIcon","alt","_hoisted_8","_normalizeStyle","color","getColor","calculateBrightness","brightness","_hoisted_9","_hoisted_11","name","setup","ref","router","useRouter","getPathsId","async","axios","get","withCredentials","then","response","console","log","data","success","value","paths","message","push","catch","maximumBrightness","Math","floor","percentage","onMounted","__exports__","render"],"sourceRoot":""}